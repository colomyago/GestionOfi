1- Redacción de propuesta de proyectos con descripción y objetivos.
2-Delimitar alcance (inclusiones / exclusiones) y supuestos / restricciones.
3-Identificación de interesados y su impacto
4-Definición de criterios de aceptación verificables para 2-3 funciones nucleo.
1.1 - Contexto / problema

Las empresas y oficinas suelen gestionar su equipamiento de forma manual (planillas Excel, papeles, comunicación informal). Esto provoca:

-Pérdida de tiempo en la búsqueda de insumos.
-Dificultad para controlar el stock real.
-Extravio de equipos por falta de trazabilidad.
-Sobrecostos al no predecir consumos.

1.2- Objetivos SMART

-Específico: Desarrollar un sistema web para registrar, controlar y optimizar el uso de equipamiento de oficina.
-Medible: Lograr que el 100% de los movimientos de equipos sean registrados en el sistema desde el MVP.
-Alcanzable: Utilizar Laravel + Docker Sail para el backend, con base de datos MySQL y reportes integrados.
-Relevante: Reducir pérdidas por falta de control y agilizar la gestión de recursos.
-Temporal: Entregar un MVP funcional en 6 semanas.

1.3- Alcance resumido

Incluye:
-Registro de equipos.
-Gestión de stock (entradas, salidas, préstamos).
-Usuarios con roles (admin, supervisor, empleado).
-Reportes básicos de inventario.
-IA inicial: búsqueda en lenguaje natural.

Excluye (versión inicial):
-Integración con contabilidad/ERP.
-App móvil nativa.
-Predicciones avanzadas de mantenimiento (se incluirán en fases posteriores).

1.4- Entrega

-MVP (mínimo producto viable): CRUDs completos, gestión de stock y reportes básicos.
-Entrega intermedia: documentación técnica + diagramas UML.
-Entrega final: sistema en contenedores Docker listo para desplegar.

1.5- Interesados clave

-Administrador: alto impacto, usa el sistema a diario para gestionar equipos.
-Supervisor: impacto medio, consulta reportes para tomar decisiones.
-Empleado: impacto bajo, solicita y devuelve equipos.
-Profesor / Cliente: impacto alto, evalúa el éxito del proyecto.

1.6 - Supuestos y restricciones
1.7- Criterios de exito
1.8- Rasgos iniciales
1.9- Cronograma macro
2.1- ¿Que debe sí o sí estar en el MVP? ¿Que flujo minimo del usuario resolvemos?
2.2- ¿Que necesidades legitimas NO haremos ahora? ¿Por qué?
2.3- ¿Hasta donde llega cada función? Limites, volumen, roles, plataforma
2.4- ¿De que dependemos? ¿Quien lo provee y cuando? Api, datos, areas
